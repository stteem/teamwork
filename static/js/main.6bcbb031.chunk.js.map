{"version":3,"sources":["components/loadingComponent.js","components/imageMenuIconComponent.js","components/deleteImageDialogComponent.js","components/deletePostedImageDialogComponent.js","components/articleMenuIconComponent.js","components/alterArticleComponent.js","components/alterPostedArticleComponent.js","components/postImageAndArticleComponent.js","components/feedComponent.js","components/headerComponent.js","components/itemAndCommentComponent.js","components/articleAndCommentComponent.js","components/loginComponent.js","components/createUserComponent.js","components/aboutComponent.js","shared/baseUrl.js","components/mainComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","redux/auth.js","redux/feed.js","redux/imageid.js","redux/articleid.js","redux/createUser.js","redux/forms.js","redux/configureStore.js","App.js","serviceWorker.js","index.js"],"names":["Loading","className","Spinner","color","options","ITEM_HEIGHT","ImageMenu","props","React","useState","anchorEl","setAnchorEl","open","Boolean","handleOption","handleDialogOpen","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","width","map","option","MenuItem","key","DeleteDialog","setOpen","handleClose","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","deleteImage","itemid","autoFocus","DeletePostedImageDialog","deletePostedImage","ArticleMenu","target","getAttribute","handleOpen","handleOpenDialog","value","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","ArticleMenuOptions","classes","title","setTitle","article","setArticle","openDialog","setOpenDialog","handleCloseDialog","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Form","onSubmit","preventDefault","updateArticle","FormGroup","Label","htmlFor","Input","type","name","onChange","e","for","rows","deleteArticle","UpdateArticleMenuOptions","updatePostedArticle","deletePostedArticle","RenderPostForm","state","isArticleModalOpen","isModalOpen","file","toggleModal","bind","toggleArticleModal","handleImageSubmit","onFileInputChange","handleArticleSubmit","this","setState","console","log","files","postGif","postArticle","icon","faImage","size","faKeyboard","isOpen","toggle","ModalHeader","ModalBody","innerRef","input","onChangeInput","CustomInput","label","Component","RenderFeedItem","auth","feed","fetchImageAndComments","fetchArticleAndComments","imageurl","Card","parseInt","userid","CardBody","CardTitle","CardSubtitle","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdon","CardImg","src","alt","to","a","CardText","RenderPostedItem","Feed","feeds","index","singleFeed","isLoading","errMess","Header","isNavOpen","toggleNav","handleLogin","handleLogout","loginUser","email","password","logoutUser","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","Collapse","navbar","Nav","NavItem","isAuthenticated","faUser","user","outline","RenderItem","item","gifTitle","url","RenderItemComments","comments","comment","RenderSingleComment","CommentForm","handleSubmit","handleChange","values","postImageComment","Row","Col","textarea","model","placeholder","disabled","ItemDetail","Breadcrumb","BreadcrumbItem","active","RenderArticle","RenderArticleComments","postArticleComment","articleid","ArticleDetail","Login","setEmail","setPassword","history","useHistory","from","useLocation","pathname","localStorage","getItem","replace","required","val","length","maxLength","len","minLength","validEmail","test","CreateUser","handleSubmitFailed","error","reguser","gender","jobrole","department","address","maritalstatus","postNewUser","resetCreateUserForm","setTimeout","$form","errors","md","text","validators","show","messages","select","offset","check","checkbox","About","role","baseUrl","Main","fetchFeed","getIdParamAndFetchImage","getIdParamAndFetchArticle","match","matchPath","location","path","exact","strict","params","PrivateRoute","component","rest","render","withRouter","connect","createduser","dispatch","creds","requestLogin","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","status","statusText","json","storage","setItem","token","receiveLogin","catch","message","removeItem","payload","data","form","FormData","append","bearer","newComment","imageid","addComment","newtitle","newtext","addArticle","newarticleid","newcomment","addArticleComment","articleUpdate","newitemid","newarticle","updateArticleSuccess","updatePostedArticleSuccess","image","deleteSuccess","deleteArticleSuccess","deletePostedArticleSuccess","deletePostedImageSuccess","actions","reset","Auth","action","concat","filter","Item","Article","RegisterUser","InitialUser","isadmin","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","basename","process","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bcbb031.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Spinner } from 'reactstrap';\r\n\r\n\r\n/*export const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};*/\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n      \t\t<Spinner color=\"primary\" />\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst options = [\r\n  'Delete',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function ImageMenu(props) {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOption = () => {\r\n      props.handleDialogOpen();\r\n      setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(option => (\r\n          <MenuItem key={option} onClick={handleOption}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ImageMenu from './imageMenuIconComponent';\r\n\r\nexport default function DeleteDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    props.deleteImage(props.itemid);\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ImageMenu handleDialogOpen={handleDialogOpen} />\r\n      \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Image?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this post?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport ImageMenu from './imageMenuIconComponent';\r\n\r\nexport default function DeletePostedImageDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDialogOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    props.deletePostedImage(props.itemid);\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ImageMenu handleDialogOpen={handleDialogOpen} />\r\n      \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Image?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this post?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\n\r\nconst options = [\r\n  'Edit',\r\n  'Delete',\r\n];\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function ArticleMenu(props) {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    setAnchorEl(null);\r\n\r\n    const option = event.target.getAttribute(\"value\");\r\n\r\n    if(option === \"Edit\"){\r\n      props.handleOpen();\r\n    }\r\n    if (option === \"Delete\") {\r\n      props.handleOpenDialog();\r\n    }\r\n\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <IconButton\r\n        aria-label=\"more\"\r\n        aria-controls=\"long-menu\"\r\n        aria-haspopup=\"true\"\r\n        onClick={handleClick}\r\n      >\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu\r\n        id=\"long-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5,\r\n            width: 200,\r\n          },\r\n        }}\r\n      >\r\n        {options.map(option => (\r\n          <MenuItem key={option} value={option} onClick={handleClose}>\r\n            {option}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ArticleMenu from './articleMenuIconComponent';\r\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\r\n\r\n//Dialog dependencies\r\n//import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    /*border: '2px solid #000',*/\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: '500px',\r\n  },\r\n}));\r\n\r\nexport default function ArticleMenuOptions(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState(props.title);\r\n  const [article, setArticle] = React.useState(props.article);\r\n\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n\r\n  const handleArticleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.updateArticle(props.itemid, title, article);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleArticleDelete = () => {\r\n    props.deleteArticle(props.itemid);\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ArticleMenu handleOpen={handleOpen} handleOpenDialog={handleOpenDialog} >\r\n        react-transition-group\r\n      </ArticleMenu>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n          <div className=\"closemodal\" onClick={handleClose}><Button color=\"link\">X</Button></div>\r\n            <h2 id=\"transition-modal-title\">Edit Article</h2>\r\n            <Form onSubmit={handleArticleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                    <Input type=\"text\" id=\"title\" name=\"title\"\r\n                        value={title} onChange={e => setTitle(e.target.value)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"article\">Article</Label>\r\n                    <Input type=\"textarea\" name=\"article\" id=\"article\" rows=\"10\"\r\n                      value={article} onChange={e => setArticle(e.target.value)} />\r\n                </FormGroup>\r\n               \r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Update</Button>\r\n            </Form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Article?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this article?.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleArticleDelete} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport ArticleMenu from './articleMenuIconComponent';\r\nimport { Form, FormGroup, Input, Label, Button } from 'reactstrap';\r\n\r\n//Dialog dependencies\r\n//import Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    /*border: '2px solid #000',*/\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    width: '500px',\r\n  },\r\n}));\r\n\r\nexport default function UpdateArticleMenuOptions(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [title, setTitle] = React.useState(props.title);\r\n  const [article, setArticle] = React.useState(props.article);\r\n\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n\r\n  const handleArticleSubmit = (event) => {\r\n    event.preventDefault();\r\n    props.updatePostedArticle(props.itemid, title, article);\r\n    setOpen(false);\r\n  }\r\n\r\n  const handleArticleDelete = () => {\r\n    props.deletePostedArticle(props.itemid);\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ArticleMenu handleOpen={handleOpen} handleOpenDialog={handleOpenDialog} >\r\n        react-transition-group\r\n      </ArticleMenu>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n          <div className=\"closemodal\" onClick={handleClose}><Button color=\"link\">X</Button></div>\r\n            <h2 id=\"transition-modal-title\">Edit Article</h2>\r\n            <Form onSubmit={handleArticleSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"title\">Title</Label>\r\n                    <Input type=\"text\" id=\"title\" name=\"title\"\r\n                        value={title} onChange={e => setTitle(e.target.value)} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label for=\"article\">Article</Label>\r\n                    <Input type=\"textarea\" name=\"article\" id=\"article\" rows=\"10\"\r\n                      value={article} onChange={e => setArticle(e.target.value)} />\r\n                </FormGroup>\r\n               \r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Update</Button>\r\n            </Form>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete Article?\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete this article?.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleArticleDelete} color=\"primary\" autoFocus>\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\r\nimport { faKeyboard } from '@fortawesome/free-solid-svg-icons'\r\nimport { Modal, ModalHeader, ModalBody, Form, FormGroup, Input, CustomInput, Label, Button } from 'reactstrap';\r\n\r\n\r\n\r\n/*const RenderPostForm = () => {\r\n\treturn(\r\n\t\t<div className=\"container postdiv\">\r\n            <div className=\"row\">\r\n            </div>\r\n        </div>    \r\n    );\r\n}*/\r\n\r\nclass RenderPostForm extends Component {\r\n\r\n\tconstructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          isArticleModalOpen: false,\r\n          isModalOpen: false,\r\n          file: null\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleArticleModal = this.toggleArticleModal.bind(this);\r\n        this.handleImageSubmit = this.handleImageSubmit.bind(this);\r\n        this.onFileInputChange = this.onFileInputChange.bind(this);\r\n        this.handleArticleSubmit = this.handleArticleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    toggleArticleModal() {\r\n    \tthis.setState({\r\n          isArticleModalOpen: !this.state.isArticleModalOpen\r\n        });\r\n    }\r\n\r\n    onFileInputChange(e) {\r\n        console.log(e.target.files[0]);\r\n        this.setState({file: e.target.files[0]});\r\n        console.log('state', this.state.file);\r\n    }\r\n\r\n    handleImageSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.title.value !== '' && this.state.file !== null) {\r\n            this.toggleModal();\r\n            this.props.postGif(this.title.value, this.state.file);\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    handleArticleSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.title.value !== '' && this.article.value !== '') {\r\n            this.toggleArticleModal();\r\n            this.props.postArticle(this.title.value, this.article.value);\r\n        }\r\n        else return false;\r\n    }\r\n\r\n\r\n    /*handleSubmit(event) {\r\n        this.props.postGif({title: this.title.value, image: event.target.files[0]});\r\n    }*/\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"postdiv\">\r\n\t\t            <div className=\"row\">\r\n                        <div className=\"col-12 col-md-12 m-1\">\r\n        \t\t            <Button className=\"gifbutton\" onClick={this.toggleModal}><FontAwesomeIcon icon={ faImage } style={{ color: 'purple' }} size=\"lg\" /><strong> Gif</strong></Button>\r\n        \t\t            <Button className=\"gifbutton\" onClick={this.toggleArticleModal}><FontAwesomeIcon icon={ faKeyboard } style={{ color: 'violet' }} size=\"lg\" /><strong> Article</strong></Button>\r\n                        </div>\r\n                    </div>\r\n\t\t        </div>\r\n\t\t         <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Post Gif</ModalHeader>\r\n                    <ModalBody>\r\n                    \t<Form onSubmit={this.handleImageSubmit}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"title\">Title</Label>\r\n                                <Input type=\"text\" id=\"title\" name=\"title\"\r\n                                    innerRef={(input) => this.title=input}\r\n                                    onChange={this.onChangeInput} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"image\">Gif of Life</Label>\r\n                            </FormGroup>\r\n                            <CustomInput type=\"file\" id=\"image\" name=\"image\" label=\"Yo, pick a gif!\"\r\n                                onChange={this.onFileInputChange} />\r\n\r\n                            <Button type=\"submit\" value=\"submit\" className=\"buttn\">Post</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <Modal isOpen={this.state.isArticleModalOpen} toggle={this.toggleArticleModal}>\r\n                    <ModalHeader toggle={this.toggleArticleModal}>Post Article</ModalHeader>\r\n                    <ModalBody>\r\n                    \t<Form onSubmit={this.handleArticleSubmit}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"title\">Title</Label>\r\n                                <Input type=\"text\" id=\"title\" name=\"title\"\r\n                                    innerRef={(input) => this.title = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label for=\"article\">Article</Label>\r\n        \t\t\t\t\t\t<Input type=\"textarea\" name=\"article\" id=\"article\" rows=\"10\"\r\n        \t\t\t\t\t\tinnerRef={(input) => this.article=input} />\r\n                            </FormGroup>\r\n                           \r\n                            <Button type=\"submit\" value=\"submit\" className=\"buttn\" >Post</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default RenderPostForm;","import React from 'react';\r\nimport { Card, CardImg, CardTitle, CardBody, CardSubtitle, CardText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './loadingComponent';\r\nimport DeleteDialog from './deleteImageDialogComponent';\r\nimport DeletePostedImageDialog from './deletePostedImageDialogComponent';\r\nimport ArticleMenuOptions from './alterArticleComponent';\r\nimport PostedArticleMenuOptions from './alterPostedArticleComponent';\r\nimport RenderPostForm from './postImageAndArticleComponent';\r\n\r\n\r\n\r\nfunction RenderFeedItem({auth, feed, fetchImageAndComments, fetchArticleAndComments, updateArticle, deleteImage, deleteArticle }) {\r\n if (feed.imageurl != null) {\r\n    return(\r\n        <Card>\r\n        {parseInt(auth.userid, [10]) === feed.userid ?\r\n            <div className=\"longmenu\"><DeleteDialog itemid={feed.itemid} deleteImage={deleteImage} /></div>\r\n            : null\r\n        }\r\n            <CardBody>\r\n              <CardTitle><h4>{feed.title}</h4></CardTitle>\r\n              <div className=\"name-date\">\r\n              <CardSubtitle>{feed.firstname} {feed.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(feed.createdon)))}</CardSubtitle>\r\n              </div>\r\n            </CardBody>\r\n            <CardImg width=\"100%\" src={feed.imageurl} alt={feed.title} />\r\n            <Link to={`/item/${feed.itemid}`} >\r\n                <div className=\"article-link\">\r\n                    <CardBody onClick={async () => await fetchImageAndComments(feed.itemid)}>\r\n                        <span className=\"fa fa-comment fa-lg\"></span>\r\n                    </CardBody>\r\n                </div>\r\n            </Link>\r\n        </Card>\r\n    );\r\n }\r\n else {\r\n    return(\r\n        <Card>\r\n        {parseInt(auth.userid, [10]) === feed.userid ?\r\n            <div className=\"longmenu\"><ArticleMenuOptions title={feed.title} article={feed.article} itemid={feed.itemid} updateArticle={updateArticle} deleteArticle={deleteArticle} /></div>\r\n            : null\r\n        }\r\n            <CardBody>\r\n              <CardTitle><h4>{feed.title}</h4></CardTitle>\r\n              <div className=\"name-date\">\r\n              <CardSubtitle>{feed.firstname} {feed.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(feed.createdon)))}</CardSubtitle>\r\n              </div>\r\n            </CardBody>\r\n            <div className=\"article-feed\">\r\n                <CardBody>\r\n                    <CardText>{feed.article}</CardText>\r\n                </CardBody>\r\n            </div>\r\n            <Link to={`/article/${feed.itemid}`} >\r\n                <div className=\"article-link\">\r\n                    <CardBody onClick={async () => await fetchArticleAndComments(feed.itemid)}>\r\n                        <span className=\"fa fa-comment fa-lg\"></span>\r\n                     </CardBody>\r\n                 </div>\r\n             </Link>\r\n        </Card>\r\n    );\r\n }\r\n    \r\n}\r\n\r\n\r\nfunction RenderPostedItem({auth, feed, fetchImageAndComments, fetchArticleAndComments, updatePostedArticle, deletePostedArticle, deletePostedImage}) {\r\n    if (feed.imageurl != null) {\r\n        return(\r\n            <Card>\r\n            {parseInt(auth.userid, [10]) === feed.userid ?\r\n                <div className=\"longmenu\"><DeletePostedImageDialog itemid={feed.itemid} deletePostedImage={deletePostedImage} /></div>\r\n                : null\r\n            }\r\n                <CardBody>\r\n                  <CardTitle><h4>{feed.title}</h4></CardTitle>\r\n                  <div className=\"name-date\">\r\n                  <CardSubtitle>{feed.firstname} {feed.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(feed.createdon)))}</CardSubtitle>\r\n                  </div>\r\n                </CardBody>\r\n                <CardImg width=\"100%\" src={feed.imageurl} alt={feed.title} />\r\n                <Link to={`/item/${feed.itemid}`} >\r\n                    <div className=\"article-link\">\r\n                        <CardBody onClick={async () => await fetchImageAndComments(feed.itemid)}>\r\n                            <span className=\"fa fa-comment fa-lg\"></span>\r\n                        </CardBody>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n    if (feed.article != null) {\r\n        return(\r\n            <Card>\r\n            {parseInt(auth.userid, [10]) === feed.userid ?\r\n                <div className=\"longmenu\"><PostedArticleMenuOptions title={feed.title} article={feed.article} itemid={feed.itemid} \r\n                    updatePostedArticle={updatePostedArticle} deletePostedArticle={deletePostedArticle} /></div>\r\n                : null\r\n            }\r\n                <CardBody>\r\n                  <CardTitle><h4>{feed.title}</h4></CardTitle>\r\n                <div className=\"name-date\">\r\n                  <CardSubtitle>{feed.firstname} {feed.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(feed.createdon)))}</CardSubtitle>\r\n                </div>\r\n                </CardBody>\r\n                <div className=\"article-feed\">\r\n                    <CardBody>\r\n                        <CardText>{feed.article}</CardText>\r\n                    </CardBody>\r\n                </div>\r\n                <Link to={`/article/${feed.itemid}`} >\r\n                    <div className=\"article-link\">\r\n                        <CardBody onClick={async () => await fetchArticleAndComments(feed.itemid)}>\r\n                            <span className=\"fa fa-comment fa-lg\"></span>\r\n                        </CardBody>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Feed extends React.Component {\r\n\r\n    render() {\r\n\r\n        const feed = this.props.feeds.feeds.map((feed, index) => {\r\n            return (\r\n                <ul key={index} className=\"list-unstyled\">\r\n                    <li>\r\n                        <div className=\"row centreItem\">\r\n                            <div className=\"col-12 col-md-6 m-1\">\r\n                                <RenderFeedItem feed={feed} fetchImageAndComments={this.props.fetchImageAndComments}\r\n                                    fetchArticleAndComments={this.props.fetchArticleAndComments} auth={this.props.auth}\r\n                                    updateArticle={this.props.updateArticle} deleteImage={this.props.deleteImage} deleteArticle={this.props.deleteArticle} />\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        });\r\n\r\n        const singleFeed = this.props.feeds.feed.map((feed, index) => {\r\n            return (\r\n                <ul key={index} className=\"list-unstyled\">\r\n                    <li>\r\n                        <div className=\"row centreItem\">\r\n                            <div className=\"col-12 col-md-6 m-1\">\r\n                                <RenderPostedItem feed={feed} fetchImageAndComments={this.props.fetchImageAndComments}\r\n                                    fetchArticleAndComments={this.props.fetchArticleAndComments} auth={this.props.auth}\r\n                                    updatePostedArticle={this.props.updatePostedArticle} deleteImage={this.props.deleteImage} \r\n                                    deletePostedArticle={this.props.deletePostedArticle} deletePostedImage={this.props.deletePostedImage} />\r\n                            </div>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            );           \r\n        });\r\n        \r\n\r\n        if (this.props.feeds.isLoading) {\r\n            return(\r\n                <div className=\"container spinner\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.feeds.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{this.props.feeds.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <RenderPostForm postGif={this.props.postGif} postArticle={this.props.postArticle} />\r\n                </div>\r\n                <div className=\" containerBorder\">\r\n                    {singleFeed}\r\n                    {feed}\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\n\r\n\r\nexport default Feed;","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n\r\n  \thandleLogin(event) {\r\n        this.toggleModal();\r\n        this.props.loginUser({email: this.email.value, password: this.password.value});\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                    \t</NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/about'><span className=\"fa fa-info fa-lg\"></span> About</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/createuser'><span className=\"fa fa-user-plus fa-lg\"></span> Create User</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    { this.props.auth.isAuthenticated ?\r\n                                        <div>\r\n                                            <div className=\"navbar-text mr-3\"><FontAwesomeIcon icon={ faUser } size=\"lg\" /> {this.props.auth.user}</div>\r\n                                            <Button outline onClick={this.handleLogout}>\r\n                                                <span className=\"fa fa-sign-out fa-lg\"></span> Logout\r\n                                                {this.props.auth.isLoading ?\r\n                                                    <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                                    : null\r\n                                                }\r\n                                            </Button>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    \t<Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"email\">Email</Label>\r\n                                <Input type=\"text\" id=\"email\" name=\"email\"\r\n                                    innerRef={(input) => this.email = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                           \r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { Card, CardImg,  CardBody, CardTitle, CardSubtitle, Breadcrumb, BreadcrumbItem, Button, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './loadingComponent';\r\n\r\n\r\n\r\nfunction RenderItem({item}) {\r\n\r\n    return(\r\n        <div className=\"item\">\r\n            <Card>\r\n                <CardBody>\r\n                  <CardTitle>{item.gifTitle}</CardTitle>\r\n                </CardBody>\r\n                <CardBody>\r\n                    <CardImg width=\"100%\" src={item.url} alt={item.gifTitle} />\r\n                </CardBody>\r\n                <CardBody>\r\n                    <CardSubtitle>{item.firstname} {item.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(item.createdon)))}</CardSubtitle>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nfunction RenderItemComments({comments}) {\r\n    if (comments != null) {\r\n        return(\r\n            <div className=\"col-12 col-md-12 m-1 commentBorder\">\r\n                <ul className=\"list-unstyled\">\r\n                        {comments.map((comment, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    \r\n                                    <p>{comment.firstname} {comment.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.createdon)))}</p>\r\n                                    <li>{comment.comment}</li>\r\n                                    <hr/>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <div>\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction RenderSingleComment({comment}) {\r\n    return(\r\n        <div className=\"col-12 col-md-12 m-1 commentBorder\">\r\n            <ul className=\"list-unstyled\">\r\n                {comment.map((comment, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n\r\n                            <p>{comment.firstname} {comment.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.createdon)))}</p>\r\n                            <li>{comment.comment}</li>\r\n                            <hr/>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {comment: ''}\r\n    }\r\n\r\n   \r\n\r\n    handleSubmit(values) {\r\n        if (values.comment !== '') {\r\n            this.props.postImageComment(this.props.itemid, values.comment);\r\n        }\r\n        else \r\n            this.setState({comment: ''});\r\n            return false;\r\n    }\r\n\r\n    handleChange(comment) {\r\n        this.setState({comment: comment})\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    \r\n                    <Row className=\"form-group\">\r\n                        <Col>\r\n                        <Control.textarea \r\n                        model=\".comment\" \r\n                        id=\"comment\" \r\n                        placeholder=\"Add a comment\"\r\n                        className=\"form-control\" \r\n                        onChange={(comment) => this.handleChange(comment)}\r\n                        />\r\n                        </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" disabled={!this.state.comment} className=\"buttn\">\r\n                        Post\r\n                    </Button>\r\n                </LocalForm>\r\n            </div>\r\n        );\r\n    }\r\n}     \r\n\r\n\r\n\r\n\r\nclass ItemDetail extends Component {\r\n\r\n\r\n    render() { \r\n\r\n\r\n        if (this.props.isLoading) {\r\n            return(\r\n                <div className=\"container spinner\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row centreItem\">\r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else       \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem active><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row centreItem\">\r\n                            <div className=\"col-12 col-md-8 m-1\">\r\n                                <RenderItem item={this.props.item.item} />\r\n                                <RenderItemComments comments={this.props.item.item.comments} />\r\n                                <RenderSingleComment comment={this.props.item.comment} />\r\n                                <CommentForm itemid={this.props.item.item.itemid} postImageComment={this.props.postImageComment} />\r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ItemDetail;","import React, { Component } from 'react';\r\nimport { Card, CardText, CardBody, CardTitle, CardSubtitle, Breadcrumb, BreadcrumbItem, Button, Row, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './loadingComponent';\r\n\r\n\r\n\r\nfunction RenderArticle({article}) {\r\n\r\n    return(\r\n        <div className=\"item\">\r\n            <Card>\r\n                <CardBody>\r\n                  <CardTitle><h4>{article.title}</h4></CardTitle>\r\n                  <div className=\"name-date\">\r\n                  <CardSubtitle>{article.firstname} {article.lastname}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(article.createdon)))}</CardSubtitle>\r\n                  </div>\r\n                </CardBody>\r\n                <div className=\"article\">\r\n                <CardBody>\r\n                    <CardText>{article.article}</CardText>\r\n                </CardBody>\r\n                </div>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\n    \r\n\r\n\r\n\r\nfunction RenderArticleComments({comments}) {\r\n    if (comments != null) {\r\n        return(\r\n            <div className=\"col-12 col-md-12 m-1 commentBorder\" >\r\n                <ul className=\"list-unstyled\">\r\n                        {comments.map((comment, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    \r\n                                    <p className=\"name-date\">{comment.firstname} {comment.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.createdon)))}</p>\r\n                                    <li>{comment.comment}</li>\r\n                                    <hr/>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <div>\r\n            </div>\r\n        );\r\n}\r\n\r\nfunction RenderSingleComment({comment}) {\r\n    return(\r\n        <div className=\"col-12 col-md-12 m-1 commentBorder\">\r\n            <ul className=\"list-unstyled\">\r\n                {comment.map((comment, index) => {\r\n                    return (\r\n                        <div key={index}>\r\n\r\n                            <p className=\"name-date\">{comment.firstname} {comment.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.createdon)))}</p>\r\n                            <li>{comment.comment}</li>\r\n                            <hr/>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.state = {comment: ''}\r\n    }\r\n\r\n   \r\n\r\n    handleSubmit(values) {\r\n        if (values.comment !== '') {\r\n            this.props.postArticleComment(this.props.articleid, values.comment);\r\n        }\r\n        else \r\n            this.setState({comment: ''});\r\n            return false;\r\n    }\r\n\r\n    handleChange(comment) {\r\n        this.setState({comment: comment})\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    \r\n                    <Row className=\"form-group\">\r\n                        <Col>\r\n                        <Control.textarea \r\n                        model=\".comment\" \r\n                        id=\"comment\" \r\n                        placeholder=\"Add a comment\"\r\n                        className=\"form-control\"\r\n                        onChange={(comment) => this.handleChange(comment)}\r\n                        />\r\n                        </Col>\r\n                    </Row>\r\n                    <Button type=\"submit\" disabled={!this.state.comment} className=\"buttn\">\r\n                        Post\r\n                    </Button>\r\n                </LocalForm>\r\n            </div>\r\n        );\r\n    }\r\n}     \r\n\r\n\r\n\r\n\r\nclass ArticleDetail extends Component {\r\n\r\n\r\n    render() { \r\n\r\n\r\n        if (this.props.isLoading) {\r\n            return(\r\n                <div className=\"container spinner\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row centreItem\">\r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else       \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem active><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row centreItem\">\r\n                            <div className=\"col-12 col-md-8 m-1\">\r\n                                <RenderArticle article={this.props.article.article} />\r\n                                <RenderArticleComments comments={this.props.article.article.comments} />\r\n                                <RenderSingleComment comment={this.props.article.comment} />\r\n                                <CommentForm articleid={this.props.article.article.articleid} postArticleComment={this.props.postArticleComment} />\r\n                            </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default ArticleDetail;","import React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\tconst [email, setEmail] = React.useState(null);\r\n  \tconst [password, setPassword] = React.useState(null);\r\n\r\n  \tlet history = useHistory();\r\n\tlet location = useLocation();\r\n\r\n\tlet { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n\r\n\r\n  \tconst handleLogin = async (event) => {\r\n\r\n  \t\tevent.preventDefault();\r\n        //toggleModal();\r\n        if (email !== null || password !== null) {\r\n            await props.loginUser({email: email, password: password});\r\n            return localStorage.getItem('token') ? history.replace(from) : null;\r\n        }\r\n        else return false;\r\n    }\r\n\r\n    \r\n\r\n    return(\r\n        <div> \r\n        \t<header className=\"App-header\">\r\n                <h1>TeamWork</h1>\r\n                <h5>Inspiration comes from the little Gifs of life! Login to connect with your team mates in a giffy way.</h5> \r\n                <div className=\"container\">\r\n                    <div className=\"row loginform\">\r\n                        <div className=\"col-12 col-md-3\" >\r\n                            <Form onSubmit={handleLogin}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"email\">Email</Label>\r\n                                    <Input type=\"text\" id=\"email\" name=\"email\"\r\n                                        onChange={e => setEmail(e.target.value)} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"password\">Password</Label>\r\n                                    <Input type=\"password\" id=\"password\" name=\"password\" \r\n                                        onChange={e => setPassword(e.target.value)}  />\r\n                                </FormGroup>\r\n                               \r\n                                <Button type=\"submit\" value=\"submit\" className=\"loginbuttn\">\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    {props.auth.isLoading ?\r\n                                        <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\r\n                                        : null\r\n                                    }\r\n                                </Button>    \r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n  \r\n\t\t    </header>\r\n        </div>\r\n    );    \r\n}","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n//import { isEmail, isEmpty } from 'validator';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass CreateUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSubmitFailed = this.handleSubmitFailed.bind(this);\r\n        this.state = {error: ''}\r\n    }\r\n\r\n    handleSubmit(reguser) {\r\n        \r\n        //console.log('reguser', reguser.values)\r\n        if (reguser.firstname !== '' && reguser.lastname !== ''\r\n        \t&& reguser.email !== '' && reguser.password !== ''\r\n        \t&& reguser.gender !== false && reguser.jobrole !== ''\r\n        \t&& reguser.department !== '' && reguser.address !== ''\r\n        \t&& reguser.maritalstatus !== false ) \r\n        {\r\n        \t//console.log(\"Current State is: \" + JSON.stringify(reguser.firstname));\r\n        \tthis.props.postNewUser(reguser);\r\n        \tthis.props.resetCreateUserForm();\r\n        }\r\n        \r\n        else this.setState({error: 'Empty field(s) detected!'});\r\n            setTimeout(() => {this.setState({error: ''})},5000);\r\n            return false;\r\n    }\r\n\r\n\r\n    handleSubmitFailed(reguser) {\r\n\t    // logs form-level errors\r\n\t    console.log('reguser form', reguser.$form.errors);\r\n\r\n\t    // logs errors for user.email\r\n\t    //console.log(reguser.email.errors);\r\n\t }\r\n\r\n\r\n    render() {\r\n\r\n    \t//const { firstname, lastname, email, password, gender, jobrole, dept, address, status } = this.props.reguser;\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Create User</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Create User</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>New User Information </h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form \r\n                        \tmodel=\"reguser\" \r\n                        \t//validators={{'': { required }}}\r\n                        \tonSubmit={(reguser) => this.handleSubmit(reguser)}\r\n                        \t//onSubmitFailed={ (reguser) => this.handleSubmitFailed(reguser) }\r\n                    \t>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"password\" md={2}>Password</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text type=\"password\" model=\".password\" id=\"password\" name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(6), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".password\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 5 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"gender\" md={2}>Gender</Label>\r\n                                <Col md={8}>\r\n                                    <Control.select \r\n                                        model=\".gender\" \r\n                                        name=\"gender\"\r\n                                        className=\"form-control\">\r\n                                        <option></option>\r\n                                        <option>Male</option>\r\n                                        <option>Female</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"jobrole\" md={2}>Job Role</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".jobrole\" id=\"jobrole\" name=\"jobrole\"\r\n                                        placeholder=\"Job Role\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(50)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".jobrole\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 50 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"dept\" md={2}>Department</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".department\" id=\"department\" name=\"department\"\r\n                                        placeholder=\"Department\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(50)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".department\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 50 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"address\" md={2}>Address</Label>\r\n                                <Col md={8}>\r\n                                    <Control.text model=\".address\" id=\"address\" name=\"address\"\r\n                                        placeholder=\"Address\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(50)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".address\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required, ',\r\n                                            minLength: 'Must be greater than 3 characters',\r\n                                            maxLength: 'Must be 50 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<Label htmlFor=\"maritalstatus\" md={2}>Marital Status</Label>\r\n                                <Col md={8}>\r\n                                    <Control.select \r\n                                        model=\".maritalstatus\" \r\n                                        name=\"maritalstatus\"\r\n                                        className=\"form-control\">\r\n\t\t\t\t\t\t\t\t\t\t<option></option>\r\n                                        <option>Married</option>\r\n                                        <option>Single</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".isadmin\" name=\"isadmin\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>Make Admin</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                \r\n                            </Row>\r\n                            \r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                <p className=\"error\">{this.state.error}</p>\r\n                                    <Button className=\"buttn\" disabled type=\"submit\">\r\n                                    Create User\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default CreateUser;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nfunction About() {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h2>Overview</h2>\r\n                    <p>Teamwork is an internal social network for employees of an organization. The goal of this\r\n                        application is to facilitate more interaction between colleagues and promote team bonding.</p>\r\n\r\n                    <h2>Project review</h2>\r\n                    <p>First if you don't have time to read this lengthy piece, check the end of this review for login details.</p>\r\n                    <p>TeamWork is the capstone project of the 2019 Facebook sponsored #DevCTrainingWithAndela. The program spanned 3 months, starting September 2019 till 30th November 2019,\r\n                    the capstone project had 1 month ending November 30 2019.\r\n                    I thought i'd do a review of my implementation since there is a marked departure from the project specification issued by Andela. \r\n                    I shall start with the digressions, by critiquing the project spec, followed by issues i am yet to resolve, and finally give pointers to some\r\n                    sweet sweet enhancements i wish not that you miss. Perhaps those are stuffs a project management board deals with, but we might as well sort them here in case \r\n                    you don't make it to my project repos. Let's start in the beninging, shall we? Wait! You didn't miss that infamous \"beninging\" humor, did you? :).</p>\r\n                    \r\n                    <h5>Digressions</h5>\r\n                    <ul>\r\n                    <li> The project spec has been hailed by the cohorts as being professionally put together, and i couldn't agree more. However, on starting the frontend, some requirements made less sense,\r\n                    no offence meant here, but i reckon these are stuffs one sorts with a project manager in the real world. For example, in the create-user API, on succesfully \r\n                    registering a new user, we are required to return a response with a token. That doesn't make sense to the admin, nor the registered user, who only needs his login \r\n                    details emailed to him. </li>\r\n                    <li>\r\n                    The getItemById (where a user can view a single feed onClick) endpoints pose enormous redundancies that if avoided, could save huge time to first paint, and time to interactive.\r\n                    To my team lead, i would suggest a cleaner method that saves network request time. Here, since we have items in the feed already, when clicked, a filter function renders clicked item in\r\n                    an array without any network request, while we go fetch comments with clicked itemId from the network, to render in another array below. Even though i haven't seen the twitter code for it, I bet that is how twitter \r\n                    implements its \"view single tweet and comments\".\r\n                    </li>\r\n                    <li> Apparently, most of the spec shortcomings are with the specified response data, where it isn't the API design. For the feed API, following the database design\r\n                    which required seperate image and article tables, to get feed, one must pull off some SQL query that leaves one panting for breath, whilst rendering the query non performant if scaled up.\r\n                    Let's see how that went for me.\r\n                       \r\n                    <p>\r\n                    <sub>\r\n                        const soCalledDeftQuery =   `WITH A as (SELECT i.imageid as itemid, i.createdon, i.title, i.imageurl as item, i.userid, u.firstname as author \r\n                                        FROM images i JOIN users u ON i.userid = u.userid UNION ALL SELECT a.articleid, a.createdon, a.title, a.article, a.userid, u.firstname \r\n                                        FROM articles a JOIN users u ON a.userid = u.userid ORDER BY createdon DESC) \r\n                                        SELECT row_number() over (order by (select NULL)) as id, itemid, createdon, title, item, userid, author \r\n                                        INTO feed FROM A`;\r\n                    </sub>\r\n                    </p>\r\n                    <p>\r\n                    So i needed to churn out all that query to build the feed API. It selects from 2 tables, image and article, and whips up a temporary table with new row IDs. \r\n                    Until my homunculus (little man in my head) pointed out how unnecassarily non performant the query was, i felt all deft for writing such advanced database query. I guess it could \r\n                    have held if there wasn't an alternative, though it meant going against the project spec, which was exactly what i did(with a reminder to sort it with the team lead, \r\n                    caveat, i am the team lead ;). It required a relation containing both image and article,\r\n                    which accepts null values. Since both tables had 5 columns (imageId, userId, imageurl, title, createdon) and (articleId, userId, article, title, createdon) respectively, \r\n                    i only needed a new table with 6 columns (itemId, userid, title, imageurl, article, createdon). So an image post populates every column but article, which gets null, \r\n                    and vice-versa. With the resultant query shown below, i thought it was neater and more performant at any scale.  \r\n                    </p>\r\n                    <p>\r\n                    <sub>\r\n                        const simpleQuery = `SELECT i.itemid, i.imageurl, i.article, i.title, i.userid, i.createdon, u.firstname,\r\n                                            u.lastname FROM items i JOIN users u ON i.userid = u.userid ORDER BY createdon DESC`;\r\n                    </sub>\r\n                    </p>\r\n                    <p>\r\n                    Except for asthetics and enhancement of showing the user who posted, which isn't in the spec, it doesn't need a JOIN operation whatsoever, it could have been a simple\r\n                    select statement ordering by date, and piam! i'd have my feed :). But in this day and age of social media, what is a post without an author's name? \r\n                    </p>\r\n                    </li>\r\n                    </ul>\r\n\r\n                    <h5>Issues</h5>\r\n                    <p>\r\n                    Since i have been dragging the project spec, i figured i should wash my dirty linen in public as well, before you go find out how inept i have been with some of those endpoints. \r\n                    Though i have created and consumed all required endpoints, the project is not completely production ready. But after reading @unicodeveloper article titled \r\n                    \"Who is Speaking On Your Behalf? by Prosper Otemuyiwa\", i thought it was time to let the world in on my awesome coding prowess:) So whilst you see how i saved the third realm \r\n                    with code, be forearmed.\r\n                    </p>\r\n                    <ul>\r\n                    <li>\r\n                    Unit Tests. I am yet to cover major test cases for my endpoints in order to return human friendly server responses to the UI, so be forewarned with the \"fail to fetch(es)\". I hate them too. \r\n                    This issue led me to realise how tricky server responses are with the MERN stack, i miss my PHP. The perfectionist in me would have waited to get it right first before release,\r\n                    but nope, no longer will i play perfect on first iterations, yes i said that.\r\n                    </li>\r\n                    <li>\r\n                    Travis CI. How many times did i call you. You a *. Now we have that out of the way, getting .travis.yml configurations was such a block, i did find a coder at the meetup who'd held it down already, and made a mental\r\n                    note to have him lead me through once i was ready, but i'd since moved on to other things since it wasn't terribly affecting the project, except for best practice's sake. \r\n                    </li>\r\n                    <li>\r\n                    Validations and Alerts. Javascript Fetch API lets you return custom error messages, but has no seamless way of getting server error responses i stand to be corrected on this assertion though. So until i find my way, \r\n                    you may not find a whole lot of validation and alert messages, but i gurantee you won't be posting empty forms neither. \r\n                    </li>\r\n                    </ul>\r\n\r\n                    <h5>Enhancements</h5>\r\n                    <ul>\r\n                    <li>\r\n                    My major enhancement would be form state persistence with react-redux-form. When i first experienced it with the Facebook app long before i wrote my first code, i felt it was magical as it allowed me navigate the app\r\n                    and not worry about losing unfinished posts. On becoming a develper, i was and stil am, unrepentant about building great UX. Only the create-user route has that implementation for now. You may experiment with it,\r\n                    as you will see, the submit button is disabled as only \"isadmin = true\" has the right to create a new user.\r\n                    </li>\r\n                    <li>\r\n                    For the \"update and delete\" endpoints, setting up the menu options with Material UI components was a first for me, and memorable because it led to finally learning react hooks, making functional components the more useful.\r\n                    Its minimalist aesthetic does enhance the UI in ways i am proud of.\r\n                    </li>\r\n                    </ul>\r\n\r\n                    <p>\r\n                    In all, this project represented the high point of my developer journey in 2019, and is still setting the pace in 2020, as i have addons like PWA standards, infinite scroll, etc, to implement. I am grateful to Andela\r\n                    and Facebook for the learning opportunity. The Andela team who made it happen were awesome, and by submitting this project, i hope i get to meet them again. Check out login details, and links to project repo below. \r\n                    If you made it this far in this age of short attention spans, Thanks for staying with me.\r\n                    </p>\r\n\r\n                    <ul>\r\n                    <li><em>Frontend repo</em>: <a href=\"https://github.com/stteem/teamwork\">https://github.com/stteem/teamwork</a></li>\r\n                    <li><em>Backend repo</em>: <a href=\"https://github.com/stteem/teamwork-server\">https://github.com/stteem/teamwork-server</a></li>\r\n                    </ul>\r\n\r\n                    <h5>Login Detail 1</h5>\r\n                    <ul>\r\n                    <li>Email: guest@gmail.com</li>\r\n                    <li>Password: password</li>\r\n                    </ul>\r\n                    <h5>Login Detail 2</h5>\r\n                    <ul>\r\n                    <li>Email: ekn@gmail.com</li>\r\n                    <li>Password: password</li>\r\n                    </ul>\r\n                    \r\n                </div>\r\n                \r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <div className=\"row row-content\">\r\n                                <div className=\"col-12\">\r\n                                <h3>Contact Information</h3>\r\n                                </div>\r\n                                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                                        <h5>Address</h5>\r\n                                        <address>\r\n                                        Uyo, Akwa Ibom State<br />\r\n                                        Nigeria<br />\r\n                                        <i className=\"fa fa-phone\"></i>: +234 907 106 4360<br />\r\n                                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:uwemeffionguke@gmail.com\">uwemeffionguke@gmail.com</a>\r\n                                        </address>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                                    <div className=\"btn-group\" role=\"group\">\r\n                                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+2349071064360\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:uwemeffionguke@gmail.com\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","//export const baseUrl = 'http://localhost:3000/';\r\nexport const baseUrl = 'https://secure-castle-56382.herokuapp.com/';","import React, {Component} from 'react';\r\nimport Feed from './feedComponent';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Header from './headerComponent';\r\n//import RenderPostForm from './postImageAndArticleComponent';\r\nimport ItemDetail from './itemAndCommentComponent';\r\nimport ArticleDetail from './articleAndCommentComponent';\r\nimport Login from './loginComponent';\r\nimport CreateUser from './createUserComponent';\r\nimport About from './aboutComponent';\r\nimport { actions } from 'react-redux-form';\r\n\r\nimport { loginUser, logoutUser, fetchFeed, postGif, fetchImageAndComments, postImageComment,\r\n         postArticle, fetchArticleAndComments, postArticleComment, updateArticle, updatePostedArticle, \r\n         deleteImage, deleteArticle, deletePostedArticle, deletePostedImage, postNewUser } from '../redux/ActionCreators';\r\nimport { Switch, Route, Redirect, matchPath, withRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      auth: state.auth,\r\n      feed: state.feeds,\r\n      item: state.item,\r\n      article: state.article,\r\n      createduser: state.createduser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loginUser: (creds) => dispatch(loginUser(creds)),\r\n  logoutUser: () => dispatch(logoutUser()),\r\n  fetchFeed: () => {dispatch(fetchFeed())},\r\n  postGif: (title, file) => dispatch(postGif(title, file)),\r\n  fetchImageAndComments: (itemid) => dispatch(fetchImageAndComments(itemid)),\r\n  postImageComment: (itemid, comment) => dispatch(postImageComment(itemid, comment)),\r\n  postArticle: (title, text) => dispatch(postArticle(title, text)),\r\n  fetchArticleAndComments: (articleid) => dispatch(fetchArticleAndComments(articleid)),\r\n  postArticleComment: (articleid, comment) => dispatch(postArticleComment(articleid, comment)),\r\n  updateArticle: (itemid, title, article) => dispatch(updateArticle(itemid, title, article)),\r\n  updatePostedArticle: (itemid, title, article) => dispatch(updatePostedArticle(itemid, title, article)),\r\n  deleteImage: (itemid) => dispatch(deleteImage(itemid)),\r\n  deleteArticle: (itemid) => dispatch(deleteArticle(itemid)),\r\n  deletePostedArticle: (itemid) => dispatch(deletePostedArticle(itemid)),\r\n  deletePostedImage: (itemid) => dispatch(deletePostedImage(itemid)),\r\n  postNewUser: (values) => dispatch(postNewUser(values)),\r\n  resetCreateUserForm: () => { dispatch(actions.reset('reguser'))}\r\n });\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n\r\n    this.props.fetchFeed();\r\n\r\n    this.getIdParamAndFetchImage();\r\n    this.getIdParamAndFetchArticle();\r\n\r\n    console.log('Component DID MOUNT!')\r\n\r\n  }\r\n\r\n  \r\n  //On page reload, this function supplys image ID to the endpoint\r\n  async getIdParamAndFetchImage() {\r\n\r\n    const match = matchPath(this.props.history.location.pathname, {\r\n      path: '/item/:itemid',\r\n      exact: true,\r\n      strict: false\r\n    }) \r\n\r\n    if (match != null) {\r\n\r\n     await this.props.fetchImageAndComments(match.params.itemid);\r\n      console.log('Got param!')\r\n    }\r\n  }\r\n\r\n  //On page reload, this function supplys article ID to the endpoint\r\n  async getIdParamAndFetchArticle() {\r\n\r\n    const match = matchPath(this.props.history.location.pathname, {\r\n      path: '/article/:itemid',\r\n      exact: true,\r\n      strict: false\r\n    }) \r\n\r\n    if (match != null) {\r\n\r\n     await this.props.fetchArticleAndComments(match.params.itemid);\r\n      console.log('Got param!')\r\n    }\r\n  }\r\n\r\n /* componentWillMount() {\r\n      console.log('Component WILL MOUNT!')\r\n   }\r\n   \r\n   componentWillReceiveProps(newProps) {    \r\n      console.log('Component WILL RECIEVE PROPS!')\r\n   }\r\n   shouldComponentUpdate(newProps, newState) {\r\n      return true;\r\n   }\r\n   componentWillUpdate(nextProps, nextState) {\r\n      console.log('Component WILL UPDATE!');\r\n   }\r\n   componentDidUpdate(prevProps, prevState) {\r\n      console.log('Component DID UPDATE!', this.props.gif.data)\r\n   }\r\n   componentWillUnmount() {\r\n      console.log('Component WILL UNMOUNT!')\r\n   }*/\r\n\r\n  render() {\r\n\r\n    const ItemWithId = () => {\r\n      return(\r\n        \r\n        <ItemDetail item={this.props.item}\r\n          isLoading={this.props.item.isLoading}\r\n          errMess={this.props.item.errMess}\r\n          comments={this.props.item}\r\n          itemid={this.props.item}\r\n          postImageComment={this.props.postImageComment}\r\n          comment={this.props.item}\r\n          />\r\n      );\r\n    }\r\n\r\n    const ArticleWithId = () => {\r\n      return(\r\n        \r\n        <ArticleDetail article={this.props.article}\r\n          isLoading={this.props.article.isLoading}\r\n          errMess={this.props.article.errMess}\r\n          comments={this.props.article}\r\n          articleid={this.props.article}\r\n          postArticleComment={this.props.postArticleComment}\r\n          comment={this.props.article}\r\n          />\r\n      );\r\n    }\r\n\r\n\r\n    const PrivateRoute = ({ component: Component, ...rest }) => (\r\n      <Route {...rest} render={(props) => (\r\n        this.props.auth.isAuthenticated\r\n          ? <Component {...props} />\r\n          : <Redirect to={{\r\n              pathname: '/login',\r\n              state: { from: props.location }\r\n            }} />\r\n      )} />\r\n    );\r\n    \r\n\r\n    return (\r\n      <div /*className=\"App\"*/>\r\n        <Header auth={this.props.auth} \r\n          loginUser={this.props.loginUser} \r\n          logoutUser={this.props.logoutUser}\r\n          />\r\n        \r\n        <Switch>\r\n            <Route path='/login' component={() => <Login auth={this.props.auth} loginUser={this.props.loginUser} logoutUser={this.props.logoutUser}/>} />\r\n            <PrivateRoute path='/home' component={() => <Feed feeds={this.props.feed} fetchImageAndComments={this.props.fetchImageAndComments} \r\n                                                  fetchArticleAndComments={this.props.fetchArticleAndComments} auth={this.props.auth}\r\n                                                  updateArticle={this.props.updateArticle} deleteImage={this.props.deleteImage} \r\n                                                  deleteArticle={this.props.deleteArticle} postGif={this.props.postGif} postArticle={this.props.postArticle}\r\n                                                  updatePostedArticle={this.props.updatePostedArticle} deletePostedArticle={this.props.deletePostedArticle} \r\n                                                  deletePostedImage={this.props.deletePostedImage} />} />\r\n            <PrivateRoute path=\"/item/:itemid\" component={ItemWithId} />\r\n            <PrivateRoute path=\"/article/:itemid\" component={ArticleWithId} />\r\n            <PrivateRoute path=\"/createuser\" component={() => <CreateUser resetCreateUserForm={this.props.resetCreateUserForm} postNewUser={this.props.postNewUser} />} />\r\n            <Route path=\"/about\" component={() =>  <About /> } />\r\n            <Redirect to=\"/home\" />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    }\r\n}\r\n  \r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token,\r\n        user: response.firstname,\r\n        userid: response.userid\r\n    }\r\n}\r\n  \r\nexport const loginError = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n    // We dispatch requestLogin to kickoff the call to the API\r\n    dispatch(requestLogin(creds))\r\n\r\n    return fetch(baseUrl + 'api/v1/auth/signin', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type':'application/json' \r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            //error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        console.log('response.json', response)\r\n        if (response) {\r\n            // If login was successful, set the token in local storage\r\n            const storage = localStorage.setItem('token', response.token);\r\n            localStorage.setItem('user', response.firstname);\r\n            localStorage.setItem('userid', response.userid);\r\n            console.log('storage', storage)\r\n            // Dispatch the success action\r\n            dispatch(receiveLogin(response));\r\n        }\r\n        else {\r\n            var error = new Error('Error ' + response.status);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    })\r\n    .catch(error => dispatch(loginError(error.message)))\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// Logs the user out\r\n\r\nexport const requestLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_REQUEST\r\n    }\r\n}\r\n  \r\nexport const receiveLogout = () => {\r\n    return {\r\n      type: ActionTypes.LOGOUT_SUCCESS\r\n    }\r\n}\r\n\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    dispatch(requestLogout())\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('creds');\r\n    dispatch(receiveLogout())\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// FEED\r\n\r\nexport const feedLoading = () => {\r\n    return {\r\n        type: ActionTypes.FEED_LOADING,\r\n    }\r\n}\r\n\r\nexport const feedLoaded = (feeds) => {\r\n    return {\r\n        type: ActionTypes.FEED_LOADED,\r\n        payload: feeds\r\n    }\r\n}\r\n  \r\nexport const feedFailed = (errmess) => {\r\n    return {\r\n        type: ActionTypes.FEED_FAILED,\r\n        payload: errmess\r\n    }\r\n}\r\n\r\nexport const fetchFeed = () => (dispatch) => {\r\n    dispatch(feedLoading(true));\r\n\r\n    return fetch(baseUrl + 'api/v1/feed')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(feedLoaded(response.data)))\r\n        .catch(error => dispatch(feedFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//Post Gif\r\n\r\nexport const postGifFailed = (errmess) => {\r\n    return {\r\n        type: ActionTypes.POST_GIF_FAILED,\r\n        payload: errmess\r\n    }\r\n}\r\n\r\nexport const addImage = (feed) => {\r\n    return {\r\n        type: ActionTypes.ADD_IMAGE,\r\n        payload: feed\r\n    }\r\n}\r\n\r\nexport const postGif = (title, file) => (dispatch) => {\r\n\r\n    \r\n     console.log('title', title)\r\n     console.log('file', file)\r\n    //dispatch(postGifloading(true))\r\n\r\n    const form = new FormData();\r\n    form.append('title', title);\r\n    form.append('image', file);\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    console.log('form', form)\r\n    return fetch(baseUrl + 'api/v1/gifs', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Authorization': bearer\r\n        },\r\n        body: form\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addImage(response)))\r\n    .catch(error => dispatch(postGifFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Delete Image\r\n\r\nexport const deleteFailed = (errmess) => ({\r\n    type: ActionTypes.DELETE_IMAGE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const deleteSuccess = (itemid) => ({\r\n    type: ActionTypes.DELETE_IMAGE,\r\n    payload: itemid\r\n});\r\n\r\n\r\n\r\nexport const deleteImage = (itemid) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'api/v1/gifs/' + itemid, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(image => { console.log('Image Deleted', image); dispatch(deleteSuccess(itemid)); })\r\n    .catch(error => dispatch(deleteFailed(error.message)));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n//Delete Posted Image\r\n\r\nexport const deletePostedImageFailed = (errmess) => ({\r\n    type: ActionTypes.DELETE_POSTED_IMAGE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const deletePostedImageSuccess = (itemid) => ({\r\n    type: ActionTypes.DELETE_POSTED_IMAGE,\r\n    payload: itemid\r\n});\r\n\r\n\r\n\r\nexport const deletePostedImage = (itemid) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'api/v1/gifs/' + itemid, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(image => { console.log('Image Deleted', image); dispatch(deletePostedImageSuccess(itemid)); })\r\n    .catch(error => dispatch(deletePostedImageFailed(error.message)));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//FETCH IMAGE AND COMMENTS BY ID\r\n\r\nexport const addItemAndComments = (comments) => ({\r\n    type: ActionTypes.ADD_ITEM_AND_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const itemLoading = () => {\r\n    return {\r\n        type: ActionTypes.ITEM_AND_COMMENTS_LOADING\r\n    }\r\n}\r\n\r\nexport const itemFailed = (errmess) => ({\r\n    type: ActionTypes.ITEM_AND_COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n\r\nexport const fetchImageAndComments = (itemid) => (dispatch) => {\r\n\r\n    dispatch(itemLoading());\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n\r\n    return fetch(baseUrl + 'api/v1/gifs/' + itemid, {\r\n        headers: { \r\n            'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            //var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            var error = new Error('Ouch! Sorry, you have to login to proceed!');\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addItemAndComments(response.data)))\r\n    .catch(error => dispatch(itemFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//POST IMAGE COMMENT\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    comment\r\n});\r\n\r\nexport const addCommentFailed = (errmess) => ({\r\n    type: ActionTypes.ADD_COMMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const postImageComment = (itemid, comment ) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        imageid: itemid,\r\n        comment: comment\r\n    }\r\n\r\n    console.log('Comment', newComment)\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/gifs/' + itemid + '/comment', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(newComment)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response.data)))\r\n    .catch(error => dispatch(addCommentFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//POST ARTICLE\r\n\r\nexport const addArticle = (article) => ({\r\n    type: ActionTypes.ADD_ARTICLE,\r\n    payload: article\r\n});\r\n\r\nexport const addArticleFailed = (errmess) => ({\r\n    type: ActionTypes.ADD_ARTICLE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const postArticle = (title, text ) => (dispatch) => {\r\n\r\n    const article = {\r\n        newtitle: title,\r\n        newtext: text\r\n    }\r\n\r\n    console.log('Comment', article)\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/articles', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(article)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addArticle(response.data)))\r\n    .catch(error => dispatch(addArticleFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//FETCH ARTICLE AND COMMENTS BY ID\r\n\r\nexport const addArticleAndComments = (comments) => ({\r\n    type: ActionTypes.ADD_ARTICLE_AND_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const articleLoading = () => {\r\n    return {\r\n        type: ActionTypes.ARTICLE_AND_COMMENTS_LOADING\r\n    }\r\n}\r\n\r\nexport const articleFailed = (errmess) => ({\r\n    type: ActionTypes.ARTICLE_AND_COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n\r\nexport const fetchArticleAndComments = (articleid) => (dispatch) => {\r\n\r\n    dispatch(articleLoading(true));\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n\r\n    return fetch(baseUrl + 'api/v1/articles/' + articleid, {\r\n        headers: { \r\n            'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            //var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            var error = new Error('Ouch! Sorry, you have to login to proceed!');\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addArticleAndComments(response.data)))\r\n    .catch(error => dispatch(articleFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//POST ARTICLE COMMENT\r\n\r\nexport const addArticleComment = (comment) => ({\r\n    type: ActionTypes.ADD_ARTICLE_COMMENT,\r\n    comment\r\n});\r\n\r\nexport const addArticleCommentFailed = (errmess) => ({\r\n    type: ActionTypes.ADD_ARTICLE_COMMENT_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const postArticleComment = (articleid, comment ) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        newarticleid: articleid,\r\n        newcomment: comment\r\n    }\r\n\r\n    console.log('Comment', newComment)\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/articles/' + articleid + '/comment', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(newComment)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addArticleComment(response.data)))\r\n    .catch(error => dispatch(addArticleCommentFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Update Article\r\n\r\nexport const updateArticleFailed = (errmess) => ({\r\n    type: ActionTypes.UPDATE_ARTICLE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const updateArticleSuccess = (itemid) => ({\r\n    type: ActionTypes.UPDATE_ARTICLE,\r\n    payload: itemid\r\n});\r\n\r\nexport const updateArticle = (itemid, title, article ) => (dispatch) => {\r\n\r\n    const articleUpdate = {\r\n        newitemid: itemid,\r\n        newtitle: title,\r\n        newarticle: article\r\n    }\r\n\r\n    console.log('Updated article', articleUpdate)\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/articles/' + itemid, {\r\n        method: 'PATCH',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(articleUpdate)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {console.log(response.data); dispatch(updateArticleSuccess(response.data)); })\r\n    .catch(error => dispatch(updateArticleFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Update Posted Article\r\n\r\nexport const updatePostedArticleFailed = (errmess) => ({\r\n    type: ActionTypes.UPDATE_POSTED_ARTICLE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const updatePostedArticleSuccess = (itemid) => ({\r\n    type: ActionTypes.UPDATE_POSTED_ARTICLE,\r\n    payload: itemid\r\n});\r\n\r\nexport const updatePostedArticle = (itemid, title, article ) => (dispatch) => {\r\n\r\n    const articleUpdate = {\r\n        newitemid: itemid,\r\n        newtitle: title,\r\n        newarticle: article\r\n    }\r\n\r\n    console.log('Updated article', articleUpdate)\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/articles/' + itemid, {\r\n        method: 'PATCH',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(articleUpdate)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {console.log(response.data); dispatch(updatePostedArticleSuccess(response.data)); })\r\n    .catch(error => dispatch(updatePostedArticleFailed(error.message)));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// Delete Article\r\n\r\nexport const deleteArticleFailed = (errmess) => ({\r\n    type: ActionTypes.DELETE_ARTICLE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const deleteArticleSuccess = (itemid) => ({\r\n    type: ActionTypes.DELETE_ARTICLE,\r\n    payload: itemid\r\n});\r\n\r\n\r\n\r\nexport const deleteArticle = (itemid) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'api/v1/articles/' + itemid, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { console.log('Article Deleted', response); dispatch(deleteArticleSuccess(itemid)); })\r\n    .catch(error => dispatch(deleteArticleFailed(error.message)));\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Delete Posted Article\r\n\r\nexport const deletePostedArticleFailed = (errmess) => ({\r\n    type: ActionTypes.DELETE_POSTED_ARTICLE_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const deletePostedArticleSuccess = (itemid) => ({\r\n    type: ActionTypes.DELETE_POSTED_ARTICLE,\r\n    payload: itemid\r\n});\r\n\r\n\r\n\r\nexport const deletePostedArticle = (itemid) => (dispatch) => {\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token');\r\n\r\n    return fetch(baseUrl + 'api/v1/articles/' + itemid, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          'Authorization': bearer\r\n        }\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => { console.log('Posted Article Deleted', response); dispatch(deletePostedArticleSuccess(itemid)); })\r\n    .catch(error => dispatch(deletePostedArticleFailed(error.message)));\r\n};\r\n\r\n\r\n\r\n\r\n// Create new user\r\n\r\nexport const createUserIsLoading = () => {\r\n    return {\r\n        type: ActionTypes.CREATE_USER_LOADING\r\n    }\r\n}\r\n\r\nexport const addCreateUser = (message) => ({\r\n    type: ActionTypes.CREATE_USER,\r\n    payload: message\r\n});\r\n\r\nexport const createUserFailed = (errmess) => ({\r\n    type: ActionTypes.CREATE_USER_FAILED,\r\n    payload: errmess\r\n});\r\n\r\n\r\nexport const postNewUser = (values ) => (dispatch) => {\r\n\r\n    dispatch(createUserIsLoading());\r\n\r\n    console.log('User info', JSON.stringify(values))\r\n\r\n    const bearer = 'Bearer ' + localStorage.getItem('token'); \r\n    return fetch(baseUrl + 'api/v1/auth/create-user', {\r\n        method: 'POST',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'Authorization': bearer\r\n        },\r\n        body: JSON.stringify(values)\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            console.log('response', response)\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n            console.log('error', error)\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => { console.log(response.data); dispatch(addCreateUser(response.data))})\r\n    .catch(error => dispatch(createUserFailed(error.message)));\r\n}","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const FEED_LOADING = 'FEED_LOADING';\r\nexport const FEED_FAILED = 'FEED_FAILED';\r\nexport const FEED_LOADED = 'FEED_LOADED';\r\nexport const ADD_IMAGE = 'ADD_IMAGE';\r\n\r\nexport const POST_GIF_SUCCESS = 'POST_GIF_SUCCESS';\r\nexport const POST_GIF_LOADING = 'POST_GIF_LOADING';\r\nexport const POST_GIF_FAILED = 'POST_GIF_FAILED';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENT_FAILED = 'ADD_COMMENT_FAILED';\r\nexport const ADD_ITEM_AND_COMMENTS = 'ADD_ITEM_AND_COMMENTS';\r\nexport const ITEM_AND_COMMENTS_LOADING = 'ITEM_AND_COMMENTS_LOADING';\r\nexport const ITEM_AND_COMMENTS_FAILED = 'ITEM_AND_COMMENTS_FAILED';\r\n\r\nexport const ADD_ARTICLE = 'ADD_ARTICLE';\r\nexport const ADD_ARTICLE_FAILED = 'ADD_ARTICLE_FAILED';\r\n\r\nexport const ADD_ARTICLE_AND_COMMENTS = 'ADD_ARTICLE_AND_COMMENTS';\r\nexport const ARTICLE_AND_COMMENTS_LOADING = 'ARTICLE_AND_COMMENTS_LOADING';\r\nexport const ARTICLE_AND_COMMENTS_FAILED = 'ARTICLE_AND_COMMENTS_FAILED';\r\n\r\nexport const ADD_ARTICLE_COMMENT_FAILED = 'ADD_ARTICLE_COMMENT_FAILED';\r\nexport const ADD_ARTICLE_COMMENT = 'ADD_ARTICLE_COMMENT';\r\n\r\nexport const DELETE_IMAGE = 'DELETE_IMAGE';\r\nexport const DELETE_IMAGE_FAILED = 'DELETE_IMAGE_FAILED';\r\n\r\nexport const UPDATE_ARTICLE = 'UPDATE_ARTICLE';\r\nexport const UPDATE_ARTICLE_FAILED = 'UPDATE_ARTICLE_FAILED';\r\n\r\nexport const DELETE_ARTICLE = 'DELETE_ARTICLE';\r\nexport const DELETE_ARTICLE_FAILED = 'DELETE_ARTICLE_FAILED';\r\n\r\nexport const UPDATE_POSTED_ARTICLE = 'UPDATE_POSTED_ARTICLE';\r\nexport const UPDATE_POSTED_ARTICLE_FAILED = 'UPDATE_POSTED_ARTICLE_FAILED';\r\n\r\nexport const DELETE_POSTED_ARTICLE = 'DELETE_POSTED_ARTICLE';\r\nexport const DELETE_POSTED_ARTICLE_FAILED = 'DELETE_POSTED_ARTICLE_FAILED';\r\n\r\nexport const DELETE_POSTED_IMAGE = 'DELETE_POSTED_IMAGE';\r\nexport const DELETE_POSTED_IMAGE_FAILED = 'DELETE_POSTED_IMAGE_FAILED';\r\n\r\n\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const CREATE_USER_LOADING = 'CREATE_USER_LOADING';\r\nexport const CREATE_USER_FAILED = 'CREATE_USER_FAILED';\r\n\r\n\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\n// The auth reducer. The starting state sets authentication\r\n// based on a token being in local storage. In a real app,\r\n// we would also want a util to check if the token is expired.\r\nexport const Auth = (state = {\r\n        isLoading: false,\r\n        isAuthenticated: localStorage.getItem('token') ? true : false,\r\n        token: localStorage.getItem('token'),\r\n        user: localStorage.getItem('user'),\r\n        userid: localStorage.getItem('userid'),\r\n        errMess: null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LOGIN_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: false,\r\n                user: action.creds\r\n            };\r\n        case ActionTypes.LOGIN_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: true,\r\n                errMess: '',\r\n                token: action.token,\r\n                user: action.user,\r\n                userid: action.userid\r\n            };\r\n        case ActionTypes.LOGIN_FAILURE:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                errMess: action.message\r\n            };\r\n        case ActionTypes.LOGOUT_REQUEST:\r\n            return {...state,\r\n                isLoading: true,\r\n                isAuthenticated: true\r\n            };\r\n        case ActionTypes.LOGOUT_SUCCESS:\r\n            return {...state,\r\n                isLoading: false,\r\n                isAuthenticated: false,\r\n                token: '',\r\n                user: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feed = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        feeds: [],\r\n        feed: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n\r\n        // Load feed\r\n        case ActionTypes.FEED_LOADED:\r\n            return {...state, isLoading: false, errMess: null, feeds: action.payload, feed: []};\r\n\r\n        case ActionTypes.FEED_LOADING:\r\n            return {...state, isLoading: true, errMess: null, feeds: [], feed: []};\r\n\r\n        case ActionTypes.FEED_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n\r\n        // Store posted image for feed rendering\r\n\r\n        /*case ActionTypes.POST_GIF_LOADING:\r\n            return {...state, isLoading: true, errMess: null, feed: []};*/\r\n\r\n        case ActionTypes.ADD_IMAGE:\r\n            var feed = action.payload;\r\n            return {...state, isLoading: false, errMess: null, feed: state.feed.concat(feed)};\r\n\r\n        case ActionTypes.POST_GIF_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feed: []};\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //POSTED FEED\r\n\r\n        // Store posted article for feed rendering\r\n        case ActionTypes.ADD_ARTICLE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n        case ActionTypes.ADD_ARTICLE:\r\n            var article = action.payload;\r\n            return {...state, isLoading: false, errMess: null, feed: state.feed.concat(article)};\r\n\r\n\r\n        // Update posted article in feed\r\n        case ActionTypes.UPDATE_POSTED_ARTICLE:\r\n            return {...state, feed: state.feed.map(feed => feed.itemid !== action.payload.itemid ? feed : {...feed, ...action.payload} )};\r\n\r\n        case ActionTypes.UPDATE_POSTED_ARTICLE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n        // Delete and remove posted article from feed\r\n        case ActionTypes.DELETE_POSTED_ARTICLE:\r\n            return {...state, feed: state.feed.filter(feed => feed.itemid !== action.payload) };\r\n\r\n        case ActionTypes.DELETE_POSTED_ARTICLE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n\r\n        // Delete and remove posted image from feed\r\n        case ActionTypes.DELETE_POSTED_IMAGE:\r\n            return {...state, feed: state.feed.filter(feed => feed.itemid !== action.payload) };\r\n\r\n        case ActionTypes.DELETE_POSTED_IMAGE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n\r\n\r\n\r\n        // MAIN FEED\r\n\r\n        // Delete and remove image from main feed\r\n        case ActionTypes.DELETE_IMAGE:\r\n            return {...state, feeds: state.feeds.filter(feed => feed.itemid !== action.payload) };\r\n\r\n        case ActionTypes.DELETE_IMAGE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n        // Update article in main feed\r\n        case ActionTypes.UPDATE_ARTICLE:\r\n            return {...state, feeds: state.feeds.map(feed => feed.itemid !== action.payload.itemid ? feed : {...feed, ...action.payload} )};\r\n\r\n        case ActionTypes.UPDATE_ARTICLE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n\r\n        // Delete and remove article from main feed\r\n        case ActionTypes.DELETE_ARTICLE:\r\n            return {...state, feeds: state.feeds.filter(feed => feed.itemid !== action.payload) };\r\n\r\n        case ActionTypes.DELETE_ARTICLE_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, feeds: [], feed: []};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Item = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        item: [],\r\n        comment: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n\r\n        //Get image and comments by id\r\n        case ActionTypes.ADD_ITEM_AND_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, item: action.payload, comment: []};\r\n\r\n        case ActionTypes.ITEM_AND_COMMENTS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, item: [], comment: []};\r\n\r\n        case ActionTypes.ITEM_AND_COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, item: [], comment: []};\r\n\r\n        //Add comment\r\n        case ActionTypes.ADD_COMMENT_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, item: [], comment: []};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.comment;\r\n            return {...state, comment: state.comment.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Article = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        article: [],\r\n        comment: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n\r\n        // Fetch article and comments\r\n        case ActionTypes.ADD_ARTICLE_AND_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, article: action.payload, comment: []};\r\n\r\n        case ActionTypes.ARTICLE_AND_COMMENTS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, article: [], comment: []};\r\n\r\n        case ActionTypes.ARTICLE_AND_COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, article: [], comment: []};\r\n\r\n\r\n        // Add comments to article\r\n        case ActionTypes.ADD_ARTICLE_COMMENT_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, article: [], comment: []};\r\n\r\n        case ActionTypes.ADD_ARTICLE_COMMENT:\r\n            var comment = action.comment;\r\n            return {...state, comment: state.comment.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const RegisterUser = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        message: null\r\n    }, action) => {\r\n    switch(action.type) {\r\n\r\n        // Create User\r\n        case ActionTypes.CREATE_USER:\r\n            return {...state, isLoading: false, errMess: null, message: action.payload};\r\n\r\n        case ActionTypes.CREATE_USER_LOADING:\r\n            return {...state, isLoading: true, errMess: null, message: null};\r\n\r\n        case ActionTypes.CREATE_USER_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, message: null};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialUser = {\r\n    firstname: '',\r\n    lastname: '',\r\n    email: '',\r\n    password: '',\r\n    gender: false,\r\n    jobrole: '',\r\n    department: '',\r\n    address: '',\r\n    maritalstatus: false,\r\n    isadmin: false\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Auth } from './auth';\r\nimport { Feed } from './feed';\r\nimport { Item } from './imageid';\r\nimport { Article } from './articleid';\r\nimport { RegisterUser } from './createUser';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialUser } from './forms';\r\n\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            auth: Auth,\r\n            feeds: Feed,\r\n            item: Item,\r\n            article: Article,\r\n            createduser: RegisterUser,\r\n            ...createForms({\r\n                reguser: InitialUser\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","import React, {Component} from 'react';\r\nimport Main from './components/mainComponent';\r\n//import Login from './components/loginComponent';\r\nimport './App.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n    <Provider store={store}>\r\n      <HashRouter basename={process.env.PUBLIC_URL}>\r\n      <div className=\"App\">\r\n        <Main/>\r\n      </div>\r\n      </HashRouter>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}